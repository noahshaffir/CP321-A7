# -*- coding: utf-8 -*-
"""cp321_a7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1THEi3JpfSXq2fPcS3q0c2NcGZfobCGMq

Use Numpy, Pandas, Dash and Plotly libraries to complete this assignment.
"""

!pip install numpy pandas dash plotly dash-html-components dash-core-components
import pandas as pd, numpy as np, dash, plotly.express as px
from dash import html, dcc
from dash.dependencies import Input, Output

"""Step 1: Create a dataset for your dashboard. [5]"""

data=[
    (1930,"Uruguay","Argentina"), (1934, "Italy","Czechoslovakia"),
    (1938, "Italy","Hungary"), (1950,"Uruguay","Brazil"),
    (1954,"West Germany", "Hungary"), (1958, "Brazil", "Sweden"),
    (1962,"Brazil", "Czechoslovakia"), (1966,"England", "West Germany"),
    (1970, "Brazil", "Italy"), (1974,"West Germany", "Netherlands"),
    (1978, "Argentina", "Netherlands"), (1982, "Italy","West Germany"),
    (1986, "Argentina", "West Germany"), (1990,"West Germany", "Argentina"),
    (1994, "Brazil", "Italy"), (1998, "France","Brazil"),
    (2002, "Brazil", "Germany"), (2006, "Italy","France"),
    (2010, "Spain", "Netherlands"), (2014, "Germany","Argentina"),
    (2018, "France", "Croatia"), (2022, "Argentina", "France")
]
cleaned_data=[(year,"Germany"if winner=="West Germany" else winner,runner_up) for year,winner,runner_up in data]
df=pd.DataFrame(cleaned_data,columns=["Year","Winner","Runner-up"])
country_wins=df["Winner"].value_counts().reset_index()
country_wins.columns=["Country","Wins"]

"""Step 2: Enable user interaction with the dashboard, allowing users to: <br />
a. View all countries that have ever won a World Cup. [5] <br />
b. Select a country and view the number of times it has won the World Cup. [5] <br />
c. Select a year when a World Cup was organized and view the winner and the
runner-up. [5]
"""

app=dash.Dash(__name__)
server=app.server
app.layout=html.Div([
    html.H1("FIFA World Cup Winners Dashboard", style={"textAlign": "center"}),
    dcc.Graph(id="choropleth-map"),
    html.Label("Select a Country to View Win Count:"),
    dcc.Dropdown(
        id="country-dropdown",
        options=[{"label": country, "value": country} for country in country_wins["Country"]],
        value=None,
        clearable=False
    ),
    html.Div(id="win-output", style={"fontSize": "20px", "fontWeight": "bold"}),
    html.Label("Select a Year to View Winner & Runner-up:"),
    dcc.Dropdown(
        id="year-dropdown",
        options=[{"label": str(year), "value": year} for year in df["Year"]],
        value=None,
        clearable=False
    ),
    html.Div(id="year-output", style={"fontSize": "20px", "fontWeight": "bold"})
])

@app.callback(
    Output("choropleth-map", "figure"),
    Input("country-dropdown", "value")
)
def update_map(selected_country): #a. View all countries that have ever won a World Cup. [5]
    fig = px.choropleth(
        country_wins,
        locations="Country",
        locationmode="country names",
        color="Wins",
        title="World Cup Winners",
        color_continuous_scale="blues"
    )
    return fig
@app.callback(
    Output("win-output", "children"),
    Input("country-dropdown", "value")
)
def display_wins(selected_country): #b. Select a country and view the number of times it has won the World Cup. [5]
    wins = country_wins[country_wins["Country"] == selected_country]["Wins"].values[0]
    return f"{selected_country} has won the FIFA World Cup {wins} times."
@app.callback(
    Output("year-output", "children"),
    Input("year-dropdown", "value")
)
def display_year_winner(selected_year): #c. Select a year when a World Cup was organized and view the winner and the runner-up. [5]
    row = df[df["Year"] == selected_year].iloc[0]
    return f"In {selected_year}, {row['Winner']} won the World Cup, with {row['Runner-up']} as the runner-up."
if __name__ == "__main__":
    app.run(debug=False)
